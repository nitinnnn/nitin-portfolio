import React, { useRef } from "react";
import { Canvas, useFrame } from "@react-three/fiber";
import { useGLTF, Stage, OrbitControls } from "@react-three/drei";
import { easing } from "maath";
import {
  motion,
  useScroll,
  useTransform,
} from "framer-motion";
import { degreesToRadians } from "popmotion";

const Model3DSection = () => {
  const { scrollYProgress } = useScroll();

  const yAngle = useTransform(
    scrollYProgress,
    [0, 1],
    [degreesToRadians(0), degreesToRadians(360)]
  );


  return (
    <motion.div className="col-lg-6 col-md-6 col-sm-12 col-xs-12 robot-3d-wrapper">
      <div className="arrow"></div>
      <Canvas
        gl={{ logarithmicDepthBuffer: true }}
        shadows
        camera={{ position: [-15, 2, 8], fov: 18 }}
      >
        <Stage intensity={0.5} adjustCamera={false}>
          <Kamdo scroll={yAngle} />
        </Stage>
        <OrbitControls
          autoRotate={false}
          autoRotateSpeed={2.5}
          enableZoom={false}
          makeDefault
          minPolarAngle={Math.PI / 2}
          maxPolarAngle={Math.PI / 2}
        />
      </Canvas>
    </motion.div>
  );
};

export default Model3DSection;

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.0 s2wt_kamdo_industrial_divinities.glb --transform --simplify
Author: Hansalex (https://sketchfab.com/Hansalex)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/s2wt-kamdo-industrial-divinities-f503b70ac05e49a38c81100d71599a1b
Title: S2WT "Kamdo" (Industrial Divinities)
*/

function Kamdo(props) {
  const head = useRef();
  const stripe = useRef();
  const light = useRef();
  const { nodes, materials } = useGLTF(
    "/s2wt_kamdo_industrial_divinities-transformed.glb"
  );

  const group = useRef();

  useFrame((state, delta) => {
    const t = (1 + Math.sin(state.clock.elapsedTime * 2)) / 2;
    stripe.current.color.setRGB(1 + t * 10, 2, 20 + t * 50);
    easing.dampE(
      head.current.rotation,
      [0, state.pointer.x * (state.camera.position.z > 1 ? 1 : -1), 0],
      0.4,
      delta
    );
    // light.current.intensity = 1 + t * 2;
    group.current.rotation.y = props.scroll.current;
  });

  return (
    <group {...props} ref={group}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.body001.geometry}
        material={materials.Body}
      />
      <group ref={head}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.head001.geometry}
          material={materials.Head}
        />
        <mesh castShadow receiveShadow geometry={nodes.stripe001.geometry}>
          <meshBasicMaterial ref={stripe} toneMapped={false} />
          <pointLight
            ref={light}
            intensity={1.5}
            color={[23, 12, 41]}
            distance={2.8}
          />
        </mesh>
      </group>
    </group>
  );
}

useGLTF.preload("/s2wt_kamdo_industrial_divinities-transformed.glb");
